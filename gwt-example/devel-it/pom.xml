
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
        http://maven.apache.org/POM/4.0.0
            http://maven.apache.org/maven-v4_0_0.xsd
            ">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.github.jjYBdx4IL</groupId>
        <artifactId>github-parent</artifactId>
        <version>1.1-SNAPSHOT</version>
        <relativePath/>
    </parent>

    <groupId>com.github.jjYBdx4IL.maven.examples</groupId>
    <artifactId>gwt-example-devel-it</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>Maven Examples :: GWT Example :: Development Setup IT</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        
        <jetty.port>8080</jetty.port>
        <gwt.jetty.port>8888</gwt.jetty.port>
        <gwt.codeserver.port>9876</gwt.codeserver.port>
        <testUrl>http://localhost:${jetty.port}/sandbox.jsp</testUrl>
        <proxyTestUrl>http://localhost:${jetty.port}/sandbox/sandbox.nocache.js</proxyTestUrl>
        <installDir>${project.build.directory}/work</installDir>
        <mgmt.script>${project.basedir}/src/main/resources/startStop.sh</mgmt.script>
        <mgmt.script.debug></mgmt.script.debug>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.20</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
                <configuration>
                    <rules>
                        <requireNoRepositories />
                        <requirePluginVersions />
                        <dependencyConvergence />
                        <requireUpperBoundDeps />
                        <requireReleaseDeps>
                            <message>No Snapshots Allowed!</message>
                            <onlyWhenRelease>true</onlyWhenRelease>
                        </requireReleaseDeps>
                        <requireJavaVersion>
                            <version>[1.8,)</version>
                        </requireJavaVersion>
                        <requireMavenVersion>
                            <version>[3.0,)</version>
                        </requireMavenVersion>
                    </rules>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>        
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <systemPropertyVariables>
                            <sandbox.location>${testUrl}</sandbox.location>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <systemPropertyVariables>
                            <sandbox.location>${testUrl}</sandbox.location>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>gwt-example-client</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>gwt-example-server</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.jjYBdx4IL</groupId>
            <artifactId>github-test-utils</artifactId>
            <version>1.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.jjYBdx4IL.maven.examples</groupId>
            <artifactId>gwt-example-tests</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
    </dependencies>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>5.1</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-commons</artifactId>
                <version>5.1</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-tree</artifactId>
                <version>5.1</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.websocket</groupId>
                <artifactId>websocket-client</artifactId>
                <version>9.4.5.v20170502</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <profiles>
        <profile>
            <id>run-its</id>
            <activation>
                <property>
                    <name>skipITs</name>
                    <value>!true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>start-devel-servers</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <delete dir="${installDir}"/>
                                    
                                        <copy todir="${installDir}/api">
                                            <fileset dir="${project.basedir}/../api">
                                                <exclude name="**/target/"/>
                                            </fileset>
                                        </copy>
                                        <copy todir="${installDir}/client">
                                            <fileset dir="${project.basedir}/../client">
                                                <exclude name="**/target/"/>
                                            </fileset>
                                        </copy>
                                        <copy todir="${installDir}/server">
                                            <fileset dir="${project.basedir}/../server">
                                                <exclude name="**/target/"/>
                                            </fileset>
                                        </copy>
                                        
                                        <!-- shut down running server - just in case -->
                                        <exec executable="bash" dir="${installDir}"
                                              spawn="false" failonerror="true">
                                            <arg value="${mgmt.script}" />
                                            <arg value="${project.groupId}:${project.artifactId}:" />
                                            <arg value="stop" />
                                            <env key="DEBUG" value="${mgmt.script.debug}" />
                                        </exec>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <not>
                                                <socket server="localhost" port="${jetty.port}" />
                                            </not>
                                        </waitfor>

                                        <!-- ensure there is no server still running -->
                                        <fail>
                                            <condition>
                                                <socket server="localhost" port="${jetty.port}" />
                                            </condition>
                                        </fail>
                                        <fail>
                                            <condition>
                                                <socket server="localhost" port="${gwt.jetty.port}" />
                                            </condition>
                                        </fail>
                                        <fail>
                                            <condition>
                                                <socket server="localhost" port="${gwt.codeserver.port}" />
                                            </condition>
                                        </fail>
                                        
                                        <!-- dev mode server runs against generated api sources -->
                                        <exec executable="bash" dir="${installDir}/api"
                                              spawn="false" failonerror="true">
                                            <arg value="-c" />
                                            <arg value="mvn clean compile" />
                                        </exec>
                                        
                                        <!-- start GWT DevMode server -->
                                        <exec executable="bash" dir="${installDir}/client"
                                              spawn="false" failonerror="true">
                                            <arg value="${mgmt.script}" />
                                            <arg value="${project.groupId}:${project.artifactId}:gwt" />
                                            <arg value="start" />
                                            <arg value="mvn" />
                                            <arg value="clean" />
                                            <arg value="package" />
                                            <arg value="-Dnocompile" />
                                            <arg value="-Ddevmode" />
                                            <env key="DEBUG" value="${mgmt.script.debug}" />
                                        </exec>
                                        
                                        <echo>Waiting for GWT jetty server to come up at port ${gwt.jetty.port}</echo>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <socket server="localhost" port="${gwt.jetty.port}" />
                                        </waitfor>
                                        <echo>Waiting for GWT code server to come up at port ${gwt.codeserver.port}</echo>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <socket server="localhost" port="${gwt.codeserver.port}" />
                                        </waitfor>
                                        
                                        <!-- start mvn jetty:run -->
                                        <exec executable="bash" dir="${installDir}/server"
                                              spawn="false" failonerror="true">
                                            <arg value="${mgmt.script}" />
                                            <arg value="${project.groupId}:${project.artifactId}:jetty" />
                                            <arg value="start" />
                                            <arg value="mvn" />
                                            <arg value="clean" />
                                            <arg value="jetty:run" />
                                            <env key="DEBUG" value="${mgmt.script.debug}" />
                                        </exec>
                                        
                                        <echo>Waiting for server to come up at port ${jetty.port}</echo>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <!-- implicitly check that our reverse proxy to the gwt jetty server is working
                                            ("/sandbox/*" is actually loaded from GWT's jetty server instance) -->
                                            <http url="${proxyTestUrl}" errorsBeginAt="300" />
                                        </waitfor>

                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-devel-servers</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <!-- shut down running server - just in case -->
                                        <exec executable="bash" dir="${installDir}"
                                              spawn="false" failonerror="true">
                                            <arg value="${mgmt.script}" />
                                            <arg value="${project.groupId}:${project.artifactId}:" />
                                            <arg value="stop" />
                                            <env key="DEBUG" value="${mgmt.script.debug}" />
                                        </exec>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <not>
                                                <socket server="localhost" port="${jetty.port}" />
                                            </not>
                                        </waitfor>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <not>
                                                <socket server="localhost" port="${gwt.jetty.port}" />
                                            </not>
                                        </waitfor>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <not>
                                                <socket server="localhost" port="${gwt.codeserver.port}" />
                                            </not>
                                        </waitfor>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-devel-servers-preclean</id>
                                <phase>pre-clean</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <!-- shut down running server - just in case -->
                                        <exec executable="bash" dir="${project.basedir}"
                                              spawn="false" failonerror="true">
                                            <arg value="${mgmt.script}" />
                                            <arg value="${project.groupId}:${project.artifactId}:" />
                                            <arg value="stop" />
                                            <env key="DEBUG" value="${mgmt.script.debug}" />
                                        </exec>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <not>
                                                <socket server="localhost" port="${jetty.port}" />
                                            </not>
                                        </waitfor>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <not>
                                                <socket server="localhost" port="${gwt.jetty.port}" />
                                            </not>
                                        </waitfor>
                                        <waitfor maxwait="3" maxwaitunit="minute" checkevery="1000">
                                            <not>
                                                <socket server="localhost" port="${gwt.codeserver.port}" />
                                            </not>
                                        </waitfor>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>20020829</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
