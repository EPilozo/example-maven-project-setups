## assumptions

we have a dedicated web server machine. That host is called gruust.stream
in this example. The jetty instance will run as user 'web' on that machine.
We have SSH access to the web account on that machine.

## allow port < 1024 access to regular user on web server machine:

apt-get install authbind
touch /etc/authbind/byport/80 /etfc/authbind/byport/443
chmod 777 /etc/authbind/byport/80 /etfc/authbind/byport/443

## start jetty on server start

Add this to /etc/rc.local (on debian based machines):

    for f in /home/web/*/autostart.sh; do
        su - web -c "$f start"
    done

## deploy update

mvn clean install
mvn antrun:run@go-live -Ddeployment.sshacct=web@gruust.stream

## JDK

The jdk is expected to be installed at /opt/jdk8 on the server. I have
also installed JCE (Java Cryptography Extension) for strong HTTPS support.

## HTTPS

Use letsencrypt certbot to get free https certs. Shut down the server before
you do that and use certbot's standalone method where it fires up its own
web server.

After that, change into /etc/letsencrypt/live/<your-domain> directory and do:

    export JAVA_HOME=/opt/jdk8
    export PATH=$JAVA_HOME/bin:$PATH
    rm -f jetty.pkcs12
    openssl pkcs12 -inkey privkey.pem -in cert.pem -export -out jetty.pkcs12 -passout pass:password
    rm -f keystore
    keytool -importkeystore -srckeystore jetty.pkcs12 -srcstoretype PKCS12 -destkeystore keystore -deststorepass password -srcstorepass password
    mv -f keystore /home/web/.
    chown web.web /home/web/keystore
    chmod 600 /home/web/keystore

